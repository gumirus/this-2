У тебя есть 2 объекта dog и bird, в которых содержится их описание:
const dog = {
  name: "Чарли",
  type: "Собака",
  makeSound() {
    return "Гав-Гав";
  }
};

const bird = {
  name: "Петя",
  type: "Воробей",
  makeSound() {
    return "Чик-чирик";
  }
};

Тебе необходимо создать функцию makeDomestic(), которая будет работать с ключевым словом this таким образом:

function makeDomestic(isDomestic) {
  // Ваша реализация
}

makeDomestic.bind(dog, true)(); // вернет объект: {name: 'Чарли', type: 'Собака', isDomestic: true, makeSound: ƒ}
// Выведет сообщение: "Собака по имени Чарли говорит Гав-Гав"

makeDomestic.call(bird, false); // вернет объект: {name: 'Петя', type: 'Воробей', isDomestic: false, makeSound: ƒ}
// Выведет сообщение: "Воробей по имени Петя говорит Чик-чирик"
Она должна выводить в консоль всю информацию о животном в сообщении: “type по имени name говорит sound”, где name - имя животного, type - его тип, sound - результат вызова функции makeSound().

Также функция makeDomestic() должна принимать параметр isDomestic. Он является типом данных boolean и показывает, домашнее ли животное или нет (true/false).

Функция makeDomestic() должна возвращать новый объект животного, в котором будут все прошлые параметры (name, type, makeSound()), а также будет добавлен новый параметр isDomestic.

Кроме этого, для обращения к свойствам животного функция makeDomestic() должна использовать только this. Т.е. тебе разрешено обращаться к свойствам только через this.name либо this.makeSound(), но никак не bird.name либоbird.makeSound().

Вызови функцию makeDomestic() 3 раза, используя методы bind(), call(), apply(). При использовании bind()функцияmakeDomestic() должна работать с объектом dog, при apply() и call() - с объектом bird. Не забывай передавать параметр isDomestic в функцию при ее вызове.
